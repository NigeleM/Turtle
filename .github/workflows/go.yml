name: Go Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    timeout-minutes: 30  # Timeout for the entire job
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]  # Limited platforms to Ubuntu and Windows for testing
        goarch: [amd64, arm64]  # Limited to amd64 and arm64 for debugging
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    # Install Clang (Windows)
    - name: Install Clang (Windows)
      if: runner.os == 'Windows'
      run: |
        choco install llvm
        echo "C:\Program Files\LLVM\bin" | Out-File -Append -Encoding utf8 $env:GITHUB_PATH
    
    - name: Verify Clang installation (Windows)
      if: runner.os == 'Windows'
      run: clang --version

    # Install dependencies (Linux)
    - name: Install dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y clang

    - name: Verify Go source files
      run: |
        ls -l interpreter.go  # Make sure the Go source file exists

    - name: Build for ${{ matrix.os }}-${{ matrix.goarch }}
      run: |
        GOOS=${{ matrix.os }} GOARCH=${{ matrix.goarch }} go build -o myapp-${{ matrix.os }}-${{ matrix.goarch }} interpreter.go

    # Optional: Add testing step if needed
    # - name: Test
    #   run: go test -v ./...
