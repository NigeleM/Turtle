name: Go Build and Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write  # Needed to push release files

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest]  # Only building for macOS (Apple Silicon)

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history to ensure tags are included

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    # Build the binary for macOS (arm64)
    - name: Build for macOS (Apple Silicon)
      if: runner.os == 'macOS'
      run: |
        GOARCH=arm64 GOOS=darwin go build -o release/turtle-darwin-arm64
      shell: bash

    # Create macOS Installer
    - name: Create macOS Installer
      if: runner.os == 'macOS'
      run: |
        # Ensure the release directory exists and the binary is there
        ls -l release
        
        # Create root directory structure
        mkdir -p pkgroot/usr/local/bin
        
        # Copy the binary directly to /usr/local/bin (no subdirectory)
        cp release/turtle-darwin-arm64 pkgroot/usr/local/bin/
        
        # Verify the copy was successful
        ls -l pkgroot/usr/local/bin/
        
        # Set the correct permissions on the binary
        chmod 755 pkgroot/usr/local/bin/turtle
        
        # Create the package, with install location directly in /usr/local/bin
        pkgbuild --root pkgroot --identifier com.mycompany.turtle \
          --version 0.1.5 --install-location /usr/local/bin \
          --ownership recommended release/turtle.pkg
      shell: /bin/bash -e {0}

    # Create GitHub Release and Publish Binaries
    - name: Publish Binaries to GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: ./release/*
        token: ${{ secrets.GITHUB_TOKEN }}  # Use the GitHub token for authentication
        tag_name: v0.1.5
